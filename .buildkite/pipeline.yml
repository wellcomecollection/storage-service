steps:
  - command: .buildkite/scripts/run_autoformat.py
    label: "autoformat"
    agents:
      queue: "scala"

  - group: "run Scala tests"
    steps:

    - command: ./builds/run_sbt_tests_with_docker_compose.sh common
      label: "common"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests.sh display
      label: "display"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh indexer_common
      label: "indexer common"
      agents:
        queue: "scala"
      skip: "this only contains helpers for other test suites, not actual tests"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bags_api
      label: "bags API"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bag_register
      label: "bag register"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bag_replicator
      label: "bag replicator"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bag_root_finder
      label: "bag root finder"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bag_tagger
      label: "bag tagger"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bag_tracker
      label: "bag tracker"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bag_verifier
      label: "bag verifier"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bag_unpacker
      label: "bag unpacker"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bag_versioner
      label: "bag versioner"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh replica_aggregator
      label: "replica aggregator"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh bag_indexer
      label: "bag indexer"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh ingests_indexer
      label: "ingests indexer"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh file_finder
      label: "file finder"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh file_indexer
      label: "file indexer"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh ingests_worker
      label: "ingests worker"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh ingests_tracker
      label: "ingests tracker"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests.sh ingests_api
      label: "ingests API"
      agents:
        queue: "scala"

    - command: ./builds/run_sbt_tests_with_docker_compose.sh notifier
      label: "notifier"
      agents:
        queue: "scala"

  - command:
      pip3 install --user tox &&
      cd scripts &&
      /var/lib/buildkite-agent/.local/bin/tox -e py3
    label: "Test Python scripts"

  - wait

  - group: "publish Scala apps"
    if: build.branch == "main"
    steps:

      - command: ./builds/publish_sbt_app.sh bags_api
        label: "bags API"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh bag_register
        label: "bag register"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh bag_replicator
        label: "bag replicator"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh bag_root_finder
        label: "bag root finder"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh bag_tagger
        label: "bag tagger"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh bag_tracker
        label: "bag tracker"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh bag_verifier
        label: "bag verifier"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh bag_unpacker
        label: "bag unpacker"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh bag_versioner
        label: "bag versioner"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh replica_aggregator
        label: "replica aggregator"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh bag_indexer indexer/bag_indexer
        label: "bag indexer"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh ingests_indexer indexer/ingests_indexer
        label: "ingests indexer"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh file_finder indexer/file_finder
        label: "file finder"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh file_indexer indexer/file_indexer
        label: "file indexer"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh ingests_worker ingests/ingests_worker
        label: "ingests worker"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh ingests_tracker ingests/ingests_tracker
        label: "ingests tracker"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh ingests_api ingests/ingests_api
        label: "ingests API"
        agents:
          queue: "scala"

      - command: ./builds/publish_sbt_app.sh notifier
        label: "notifier"
        agents:
          queue: "scala"

  - wait

  - label: trigger stage deploy
    branches: "main"
    trigger: "storage-service-deploy-stage"
    async: true
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
      env:
        BUILDKITE_PULL_REQUEST: "${BUILDKITE_PULL_REQUEST}"
        BUILDKITE_PULL_REQUEST_BASE_BRANCH: "${BUILDKITE_PULL_REQUEST_BASE_BRANCH}"
        BUILDKITE_PULL_REQUEST_REPO: "${BUILDKITE_PULL_REQUEST_REPO}"
